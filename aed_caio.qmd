---
title: "Analize Exploratoria - Olist"
author: "Caio Garcia"
format:
  html:
    code-fold: true
---

```{r}
install.packages("naniar",repos = "http://cran.us.r-project.org")
```

```{r}
library("tidyverse")
library("ggplot2")
library("naniar")
library("forcats")
```

# Inicializacao

```{r}
customers <- readr::read_csv("Dados - Olist/olist_customers_dataset.csv")
order_payments <- readr::read_csv("Dados - Olist/olist_order_payments_dataset.csv")
products <- readr::read_csv("Dados - Olist/olist_products_dataset.csv")
geolocation <- readr::read_csv("Dados - Olist/olist_geolocation_dataset.csv")
order_reviews <- readr::read_csv("Dados - Olist/olist_order_reviews_dataset.csv")
sellers <- readr::read_csv("Dados - Olist/olist_sellers_dataset.csv")
order_items <- readr::read_csv("Dados - Olist/olist_order_items_dataset.csv")
orders <- readr::read_csv("Dados - Olist/olist_orders_dataset.csv")
product_category_name_translation <- readr::read_csv("Dados - Olist/product_category_name_translation.csv")
```

## Tabela Unica

```{r}
df <- merge(order_items, orders, by = "order_id") |>
        merge(customers, by = "customer_id") |>
        merge(sellers, by = "seller_id") |>
        merge(products, by = "product_id") |>
        merge(order_reviews, by = "order_id")
```

## Tabela RJ
```{r}
df_rj <- df |> filter(customer_state == "RJ")
```

# Reviews

```{r}
#| label: fig-reviews

ggplot(order_reviews, aes(x = review_score)) +
          geom_freqpoly(bins=5)
```

Os reviews de 3 a 5 pontos seguem uma progrecao geometrica, e ha um pico de reviews de 1 ponto comparado aos com 2 pontos. Hipotese: *reviews de 1 ponto indicam problemas qualitativamente diferentes de reviews com 3 ou mais pontos*.


## Prototipo
```{r}
merge(orders, order_reviews, by = "order_id") |>
    merge(customers, by = "customer_id") |>
    select(order_id, order_purchase_timestamp, review_score, customer_state) |>
    dplyr::mutate(
               data = as.Date(order_purchase_timestamp),
               data = lubridate::floor_date(data, "month")) |>
    # dplyr::count(data, customer_state) |>
    ggplot() +
    aes(x = data, y = review_score, colour = customer_state) +
    geom_line(size = 0.5, fun = "mean") +
    scale_color_viridis_d(begin = 0, end = 1) +
    labs(
        x = "Data",
        y = "Qualidade dos Reviews",
        caption = "Fonte: Olist",
        color = "Estado"
    ) +
    scale_x_date(
        date_breaks = "3 month",
        date_labels = "%b\n%Y"
    ) +
    theme_light(15) +
    theme(
        legend.position = "bottom"
    )
```

```{r}
merge(order_items, sellers, by = "seller_id")
```

# Vendas e compras por estado

```{r}
merge(order_items, sellers, by = "seller_id") |>
    group_by(seller_state) |>
    summarise(total_count=n()) |>
    arrange(total_count) |>
    print(n = 26)
```
Mais de 70% dos itens vendidos saem do estado de Sao Paulo.

```{r}
merge(order_items, orders, by = "order_id") |>
    merge(customers, by = "customer_id") |>
    group_by(customer_state) |>
    summarise(total_count=n()) |>
    arrange(total_count) |>
    print(n=27)
```
O estado do Rio de Janeiro tem o maior deficit de vendas vs compras dentre todos os estados brasileiros.

# Vendas e compras por estado por volume

```{r}
merge(order_items, sellers, by = "seller_id") |>
    group_by(seller_state) |>
    summarise_at(vars(price), list(total=sum)) |>
    arrange(total) |>
    print(n = 26)
```


```{r}
merge(order_items, orders, by = "order_id") |>
    merge(customers, by = "customer_id") |>
    group_by(customer_state) |>
    summarise_at(vars(price), list(total=sum)) |>
    arrange(total) |>
    print(n=27)
```



# Compras no RJ
Para compras feitas no RJ por estado do vendedor.
```{r}
df_rj |>
    group_by(seller_state) |>
    summarise_at(vars(review_score), list(mean=mean)) |>
    arrange(mean)
```
```{r}
df_rj |>
    group_by(seller_state) |>
    count() |>
    arrange(n)
```
