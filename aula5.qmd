---
title: "Lista de Exercicios - Olist"
author: "Caio Garcia"
format:
  html:
    code-fold: true
---

# Inicializacao

```{.r .code-cell}
library("tidyverse")
library("ggplot2")
library("naniar")
library("forcats")
```

```{.r .code-cell}
customers <- readr::read_csv("Dados - Olist/olist_customers_dataset.csv")
order_payments <- readr::read_csv("Dados - Olist/olist_order_payments_dataset.csv")
products <- readr::read_csv("Dados - Olist/olist_products_dataset.csv")
geolocation <- readr::read_csv("Dados - Olist/olist_geolocation_dataset.csv")
order_reviews <- readr::read_csv("Dados - Olist/olist_order_reviews_dataset.csv")
sellers <- readr::read_csv("Dados - Olist/olist_sellers_dataset.csv")
order_items <- readr::read_csv("Dados - Olist/olist_order_items_dataset.csv")
orders <- readr::read_csv("Dados - Olist/olist_orders_dataset.csv")
product_category_name_translation <- readr::read_csv("Dados - Olist/product_category_name_translation.csv")
```


# Lista de Perguntas

1. Quantas linhas temos na tabela 'olist_orders_dataset.csv'?
2. Quantas linhas temos na tabela 'olist_order_items_dataset.csv'?
3. Quantas linhas temos na tabela 'olist_customers_dataset.csv'?
4. Quantas linhas temos na tabela 'olist_sellers_dataset.csv'?
5. Quantas linhas temos na tabela 'olist_products_dataset.csv'?
6. Quantas linhas temos na tabela 'olist_order_payments_dataset.csv'?
7. Quantas linhas temos na tabela 'olist_order_reviews_dataset.csv'?
8. Quantas linhas temos na tabela 'olist_geolocation_dataset.csv'?
9. Quantos CEPS unicos temos no banco de dados?
10. Quantas latitudes e longitudes estÃ£o expressas na base de dados?
11. Crie um metodo para agrupar todas as diferentes latitudes e longitudes que um determinado CEP possui para um valor unico por CEP. Dica Use a funcao group_by e aggragate
12. Crie um metodo para agregar todas as tabelas disponiveis em uma unica tabela.
13. Quantas ordens distintas temos em nosso banco de dados?
14. Quantos clientes dististos existem em nosso banco de dados?
15. Quantos vendedores distintos existem em nosso bando de dados?
16. Qual a porcentagem de vendas feitas com cartao de credito?
17. Qual a porcentagem de vendas feitas com cartao de debito?
18. Qual a porcentagem de reviews menor do que 2 estreles temos em nossa base?
19. Quantas categorias de produto distintas existem em nossa base?
20. Qual a media de scores por categoria de produto?
21. Quais as 5 categorias que mais possuem produtos em nossa base?
22. Quantos comentarios existem na base?
23. Crie uma nuvem de palavras que mostre as principais informacoes contidadas nos comentarios.
24. Qual a porcentagem de ordens entregues?
25. Qual o tempo medio entre a compra e a aprovacao da compra?
26. Qual o tempo medio entre a compra e a entrega?
27. Qual a diferenca media entre a data prevista de entrega e a data efetiva de entrega?
28. Em qual periodo do dia as pessoas mais costumam fazer compras por estado? Divida entre manha, tarde e noite.
29. Quais os diferentes tipos de dados temos em nossa tabela?
30. Quantos clientes distintos temos por estado?
31. Quantos vendedores distintos temos por estado?
32. Quantos clientes distintos temos na regiao metropolitana de Sao Paulo?
33. Qual a media de valor, por estado, que os clientes atribuem aos vendedores?
34. Qual o valor medio de frete cobrado por estado? 
35. Trace um histograma de precos divididos em 4 quantis.
36. Trace um histograma de precos divididos em 10 quantis.
37. Qual a porcentagem de vendas eh feita no estado de Sao Paulo e estao no primeiro quartil?
38. Qual o valor medio das compras no primeiro quantil?
39. Considerando uma base de 6.000.000 de clientes na Olist, qual a quantidade de clientes no primeiro quartil e de Sao Paulo podemos atingir?
40. Qual o TAM (Tamanho de Mercado) no contexto descrito anteriormente?

# 1-8 quantidades de linhas
```{.r .cell-code}
stopifnot(dim(orders)[1] == 99441)
```

```{.r .cell-code}
stopifnot(dim(customers)[1] == 99441)
```

```{.r .cell-code}
stopifnot(dim(order_payments)[1] == 103886)
```

```{.r .cell-code}
stopifnot(dim(products)[1] == 32951)
```

```{.r .cell-code}
stopifnot(dim(geolocation)[1] == 1000163)
```

```{.r .cell-code}
stopifnot(dim(order_reviews)[1] == 99224)
```

```{.r .cell-code}
stopifnot(dim(sellers)[1] == 3095)
```

```{.r .cell-code}
stopifnot(dim(order_items)[1] == 112650)
```

# 9 CEPs Unicos
```{.r .cell-code}

```

# 13 Ordens Distintas
```{.r .cell-code}
stopifnot(orders$order_id |> unique() |> length() == 99441)
```
Cada registro no banco `orders` parece fazer referencia a uma ordem distinta.

# 14 Clientes Distintos
```{.r .cell-code}
stopifnot(customers$customer_id |> unique() |> length() == 99441)
stopifnot(customers$customer_unique_id |> unique() |> length() == 96096)
```
O banco `customers` tem 96096 valores unicos para `customer_unique_id`.

# 15 Vendedores Distintos
```{.r .cell-code}
stopifnot(sellers$seller_id |> unique() |> length() == 3095)
```
Ha 3095 vendedores na base `sellers`, assumindo que cada `seller_id` identifique um vendedor diferente.

# 16-17 Vendas no Credito e Debito
A informacao imediatamente disponivel diz respeito aos pagamentos, que contem 4446 referencias repetidas a pedidos:
```{.r .cell-code}
stopifnot(
    dim(order_payments)[1] -
    order_payments$order_id |> unique() |> length() ==
    4446)
```


As proporcoes de vendas no credito e debito, sem tratar esses valores repetidos sao:
 - Credito: 74%
 - Debito: 1.5%

```{.r .cell-code}
stopifnot(
    signif(order_payments |>
           filter(payment_type == "credit_card") |>
           count() /
           dim(order_payments)[1],
           digits = 3) ==
    0.739)

stopifnot(
    signif(order_payments |>
           filter(payment_type == "debit_card") |>
           count() /
           dim(order_payments)[1],
           digits = 3) ==
          0.0147)
```

# 18 Avaliacoes de 1 Estrela
As avaliacoes com a pior pontuacao possivel constituem 12% da base.
```{.r .cell-code}
stopifnot(
    signif(order_reviews |>
           filter(review_score == 1) |>
           count() /
           dim(order_reviews)[1],
           digits = 3) ==
    0.115)
```

# 19-21 Categorias de Produto
Ha 74 nomes distintos de categoria de produto na base
```{.r .cell-code}
stopifnot(
    products$product_category_name |> unique() |> length() ==
    74)
```

```{.r .cell-code}
merge(order_items, products, by = "product_id") |>
    merge(order_reviews, by = "order_id") |>
    group_by(product_category_name) |>
    summarise_at(vars(review_score), list(mean=mean)) |>
    arrange(desc(mean))
```

As 5 categorias com mais produtos presentes na base sao:
 - cama mesa banho
 - beleza saude
 - esporte lazer
 - moveis decoracao
 - informatica acessorios
 
```{.r .cell-code}
merge(order_items, products, by = "product_id") |>
    group_by(product_category_name) |>
    count() |>
    arrange(desc(n))
```

# 22 Comentarios
Ha 40968 comentarios na base, que correspondem a 41% do numero total de comentarios.
```{.r .cell-code}
stopifnot(
    order_reviews |>
    filter(!is.na(review_comment_message)) |>
    count() ==
    40968)

stopifnot(signif(
    order_reviews |>
    filter(!is.na(review_comment_message)) |>
    count() /
    #
    order_reviews |>
    filter(!is.na(review_score)) |>
    count(),
    #
    digits = 3) ==
    0.413)
```

# 24 Ordens Entregues
Ha 96478 pedidos entregues na base, correspondendo a 97% das ordens.
```{.r .cell-code}
stopifnot(
    orders |>
    filter(order_status == "delivered") |>
    count() ==
    96478)

stopifnot(signif(
    orders |> filter(order_status == "delivered") |> count() /
    dim(orders)[1],
    digits = 3) ==
    0.970)
```

# 25-26 Processo Pos-Compra
## Limpeza
Ha observacoes na base com tempo registrado de entrega, mas sem tempo registrado de aprovacao da compra, o que parece um erro. Essas observacoes nao serao consideradas para a analize do tempo entre aprovacao e entrega de uma compra.
```{.r .cell-code}
stopifnot(
    orders |>
    filter(!is.na(order_delivered_customer_date) & is.na(order_approved_at)) |>
    count() !=
    0)
```

## Analize
O tempo medio entre compra e aprovacao de compra eh de 10 horas.
```{.r .cell-code}
orders |>
    filter(!is.na(order_approved_at)) |>
    mutate(time_to_approval = difftime(order_approved_at, order_purchase_timestamp, units="hours")) |>
    summarise_at(vars(time_to_approval), list(mean=mean))
```

O tempo medio entre compra e entrega eh de 13 dias.
```{.r .cell-code}
orders |>
    filter(!is.na(order_delivered_customer_date) & !is.na(order_approved_at)) |>
    mutate(time_to_delivery = difftime(order_delivered_customer_date,
                                       order_purchase_timestamp,
                                       units="days")) |>
    summarise_at(vars(time_to_delivery), list(mean=mean))
```

# 27 Previsao de Entrega
As entregas chegam em media 11 dias antes da data prevista.
```{.r .cell-code}
orders |>
    filter(!is.na(order_delivered_customer_date)) |>
    mutate(delivery_delay = difftime(order_delivered_customer_date,
                                     order_estimated_delivery_date,
                                     units = "days")) |>
    summarise_at(vars(delivery_delay), list(mean=mean))
```
